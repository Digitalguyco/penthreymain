# Generated by Django 5.2.4 on 2025-07-29 16:10

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Organization name', max_length=255)),
                ('slug', models.SlugField(help_text='URL-friendly organization identifier', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='Brief description of the organization')),
                ('email', models.EmailField(help_text='Primary organization email', max_length=254)),
                ('phone_number', models.CharField(blank=True, help_text='Organization phone number', max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('website', models.URLField(blank=True, help_text='Organization website URL', null=True)),
                ('address_line_1', models.CharField(blank=True, help_text='Primary address line', max_length=255)),
                ('address_line_2', models.CharField(blank=True, help_text='Secondary address line (apartment, suite, etc.)', max_length=255)),
                ('city', models.CharField(blank=True, help_text='City', max_length=100)),
                ('state', models.CharField(blank=True, help_text='State/Province', max_length=100)),
                ('postal_code', models.CharField(blank=True, help_text='Postal/ZIP code', max_length=20)),
                ('country', models.CharField(default='Nigeria', help_text='Country', max_length=100)),
                ('organization_type', models.CharField(choices=[('startup', 'Startup'), ('small_business', 'Small Business'), ('medium_business', 'Medium Business'), ('enterprise', 'Enterprise'), ('non_profit', 'Non-Profit'), ('freelancer', 'Freelancer')], default='small_business', help_text='Type of organization', max_length=20)),
                ('industry', models.CharField(blank=True, help_text='Industry sector', max_length=100)),
                ('employee_count', models.PositiveIntegerField(default=1, help_text='Number of employees')),
                ('founded_date', models.DateField(blank=True, help_text='Date organization was founded', null=True)),
                ('subscription_plan', models.CharField(choices=[('free', 'Free'), ('standard', 'Standard'), ('premium', 'Premium'), ('enterprise', 'Enterprise')], default='free', help_text='Current subscription plan', max_length=20)),
                ('subscription_start_date', models.DateTimeField(blank=True, help_text='Subscription start date', null=True)),
                ('subscription_end_date', models.DateTimeField(blank=True, help_text='Subscription end date', null=True)),
                ('is_trial', models.BooleanField(default=True, help_text='Whether organization is on trial')),
                ('trial_end_date', models.DateTimeField(blank=True, help_text='Trial end date', null=True)),
                ('logo', models.ImageField(blank=True, help_text='Organization logo', null=True, upload_to='organization_logos/')),
                ('currency', models.CharField(default='NGN', help_text='Primary currency (ISO code)', max_length=3)),
                ('timezone', models.CharField(default='Africa/Lagos', help_text='Organization timezone', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Whether organization is active')),
                ('is_verified', models.BooleanField(default=False, help_text='Whether organization is verified')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationInvite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(help_text='Email of the invited user', max_length=254)),
                ('role', models.CharField(choices=[], help_text='Role to assign to the invited user', max_length=20)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invites', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='organizations.organization')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('organization', 'email')},
            },
        ),
    ]
